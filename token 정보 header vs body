# 헤더와 바디 중에 토큰 정보는 어디에 저장해서 서버로 보내는게 좋을까?

## 헤더

- 헤더에 토큰을 담는 것은 표준적이고 직관적인 방법이다. 하지만, 헤어데 포함된 정보는 브라우저의 개발자 도구나 프록시 도구 등을 통해 쉽게 노출될 수 있다.  그렇기 때문에, 민감한 정보인 refreshToken의 경우에는 헤어데 담는 것이 그만큼 위험이 따를 수 있다.
    
    그러나 만약 accessToken만을 헤더에 보내고, refreshToken은 보통 요청마다 보내지 않기 때문에 상대적으로 덜 위험하다고 할 수 있습니다.
    

## 바디

- refreshToken을 바디에 담아 전송하는 이유는, 보안적 이유로 더욱 안전하게 보호할 수 있기 때문이다. HTTP 바디는 헤더에 비해 상대적으로 노출될 위험이 적고, request payload로 처리되 때문에, 직접적으로 프록시 서버나 브라우저 개발자 도구에서 확인하기 어렵다.
    
    refreshToken이 만약 탈취되면, 토큰이 긴 유효 기간을 가질 수 있기 때문에 이를 바디에 포함시키는 것이 안전하다. 왜냐면 바디에 포함된 정보는 특정  API 요청에서만 필요하고, 민감한 정보로 취급할 수 있기 때문이다.
    

## 실제 보안상 고려

- HTTPS 사용 : 결국, HTTPS를 사용하는 경우 암호화가 이러우지므로 헤더나 바디의 구분 없이 정보는 보호됩니다. 즉, 전송 경로에서의 **중간자 공격(MITM)** 이나 스니핑을 방지 할 수 있다.
- 브라우저 개발자 도구 : 클라이언트에서 개발자 도구를 사용하여 요청을 추적할 수 있기 때문에,
    
    중요한 정보는 아무리 HTTPS를 사용하더라도, 클라이언트 측에서 쉽게 노출될 수 있다는 점을 염두에 두어야 한다. 하지만, HTTP 헤더는 상대적으로 다른 데이터와 함께 노출될 가능성이 있기 때문에 refreshToken 은 바디에 담는 것이 보안상 더 안전할 수 있다.
    

## 결론

- accessToken은 헤더에 포함시켜 전송하는 것이 표준이고, 보안상 크게 문제가 되지 않는다.
    
    왜냐면 accessToken은 만료 시간이 짧고, 자주 사용되므로 서버에서 쉽게 인증할 수 있기 때문.
    
- refreshToken은 바디에 포함시켜 보내는 것이 더 보안적일 수 있다. refreshToken이 탈취될 경우,
    
    긴 유효 기간 동안 악용될 수 있기 때문이다. 헤더보다 바디에 포함시켜 보내는 것이 더 안전.
